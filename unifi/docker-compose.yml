version: "3"
services:
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    depends_on: 
      unifi-db:
        condition: service_started
    environment:
      - TZ=Australia/Sydney
      - MONGO_USER=${MONGO_USERNAME}
      - MONGO_PASS=${MONGO_PASSWORD}
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
    volumes:
      - config:/config
    ports:
      # required ports:
      - 8443:8443       # Unifi web-admin port
      - 3478:3478/udp   # Unifi STUN port
      - 10001:10001/udp # used for AP discovery
      - 8080:8080       # used for device communication (can be changed via SSH per device)
      # optional ports:
      - 1900:1900/udp   # used for 'make controller discoverable on L2 network' option
      - 6789:6789       # used for mobile-throughput test
      #- 5514:5514/udp   # used for remote syslog
    restart: unless-stopped

  unifi-db:
    image: docker.io/mongo:4.4
    container_name: unifi-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - database:/data/db
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on: 
      unifi-db:
        condition: service_started
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@unifi-db:27017/
    restart: unless-stopped

volumes:
    config:
    database: